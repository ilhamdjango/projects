name: Microservices CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analitic:
    name: Analitic Service CI/CD
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: analitic_db
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install dependencies
        working-directory: ./eccomerce-analitica
        run: pip install -r requirements.txt

      - name: Run tests
        working-directory: ./eccomerce-analitica
        run: pytest || echo "Tests skipped"

      - name: Build Docker image
        run: docker build -t dockerilham117/projects-analitic:latest ./eccomerce-analitica

      - name: Docker login
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: docker push dockerilham117/projects-analitic:latest


  gateway:
    name: Gateway Service CI/CD
    runs-on: ubuntu-latest
    needs: analitic

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: gateway_db
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install dependencies
        working-directory: ./eccomerce-gateway-service
        run: pip install -r requirements.txt

      - name: Run tests
        working-directory: ./eccomerce-gateway-service
        run: pytest || echo "Tests skipped"

      - name: Build Docker image
        run: docker build -t dockerilham117/projects-gateway:latest ./eccomerce-gateway-service

      - name: Docker login
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: docker push dockerilham117/projects-gateway:latest


  order:
    name: Order Service CI/CD
    runs-on: ubuntu-latest
    needs: [analitic, gateway]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: order_db
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install dependencies
        working-directory: ./Ecommerce-order-service
        run: pip install -r requirements.txt

      - name: Run tests
        working-directory: ./Ecommerce-order-service
        run: python manage.py test || echo "Tests skipped"

      - name: Build Docker image
        run: docker build -t dockerilham117/projects-order:latest ./Ecommerce-order-service

      - name: Docker login
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: docker push dockerilham117/projects-order:latest
